---
description: Development workflow and command reference
globs: 
alwaysApply: false
---
# Development Workflow Guide

## Getting Started
1. Install dependencies: `pnpm install`
2. Start development: `pnpm dev`
3. Build project: `pnpm build`

## Core Commands
- `pnpm dev`: Start development environment
- `pnpm build`: Build for production
- `pnpm preview`: Preview production build locally
- `pnpm build:packages`: Build all packages
- `pnpm build:staging`: Build for staging environment

## Package Management
- `pnpm install`: Install dependencies
- `pnpm add <package>`: Add new dependency
- `pnpm add <package> -D`: Add dev dependency
- `pnpm update`: Update all dependencies
- `pnpm outdated`: Check for outdated packages
- `pnpm prune`: Remove unused dependencies

## Clean Commands
- `pnpm clean`: Clean all build artifacts and dependencies
- `pnpm clean:build`: Clean build artifacts only
- `pnpm clean:deps`: Clean node_modules and reinstall
- `pnpm clean:turbo`: Clean Turborepo cache
- `pnpm clean:install`: Complete clean and fresh install

## Development Guidelines
1. Always run type-checking before committing
5. Use the appropriate build command for your environment
6. For monorepo changes, build affected packages only
7. Keep workspace dependencies in sync
8. Keep the development environment up to date with `pnpm clean:install`

## Environment Setup
- Development: `pnpm dev`

## Troubleshooting
- If dependencies are acting up: `pnpm clean:install`
- If builds are failing: `pnpm clean:build && pnpm build`
- If monorepo is out of sync: `pnpm clean && pnpm install`
- If vite is acting up: Clear cache and restart dev server